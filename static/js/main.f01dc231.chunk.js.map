{"version":3,"sources":["components/Navigation/Navigation.tsx","utils/api.ts","components/Loader/Loader.tsx","components/PersonNavigation/PersonNavigation.tsx","components/PersonComponent/PersonComponent.tsx","components/PeopleTable/PeopleTable.tsx","components/People/People.tsx","App.tsx","index.tsx"],"names":["Navigation","to","title","className","isActive","classNames","BASE_URL","getPeople","delay","url","options","method","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonNavigation","name","sex","PersonComponent","person","born","died","fatherName","motherName","slug","isSelected","mother","father","PeopleTable","peopleData","selectedPerson","map","find","pers","People","useState","setPeopleData","isEmpty","setIsEmpty","hasError","setHasError","useEffect","length","catch","useParams","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f01dc231.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string;\n  title: string;\n};\n\nexport const Navigation: FC<Props> = ({ to, title }) => {\n  return (\n    <NavLink\n      className={({ isActive }) => {\n        return classNames('navbar-item',\n          { 'has-background-grey-lighter': isActive });\n      }}\n      to={to}\n    >\n      {title}\n    </NavLink>\n  );\n};\n","const BASE_URL = 'https://mate-academy.github.io/react_people-table/api/';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nexport function getPeople(\n  url = 'people.json',\n  method: RequestMethod = 'GET',\n): Promise<[]> {\n  const options: RequestInit = { method };\n\n  return wait(500)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string;\n  name: string | null;\n  sex: string;\n};\n\nexport const PersonNavigation: FC<Props> = ({ to, name, sex }) => (\n  <NavLink\n    to={`/people/${to}`}\n    className={classNames({ 'has-text-danger': sex === 'f' })}\n  >\n    {name}\n  </NavLink>\n);\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonNavigation } from '../PersonNavigation';\n\ntype Props = {\n  person: Person;\n  isSelected: boolean;\n  mother: Person | undefined;\n  father: Person | undefined;\n};\n\nexport const PersonComponent: FC<Props> = ({\n  person: {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n  },\n  isSelected,\n  mother,\n  father,\n}) => (\n  <tr\n    data-cy=\"person\"\n    className={classNames({ 'has-background-warning': isSelected })}\n  >\n    <td>\n      <PersonNavigation\n        to={slug}\n        name={name}\n        sex={sex}\n      />\n    </td>\n    <td>{sex}</td>\n    <td>{born}</td>\n    <td>{died}</td>\n    <td>\n      {mother\n        ? (\n          <PersonNavigation\n            to={mother.slug}\n            name={mother.name}\n            sex={mother.sex}\n          />\n        ) : (\n          motherName || '-'\n        )}\n    </td>\n\n    <td>\n      {father\n        ? (\n          <PersonNavigation\n            to={father.slug}\n            name={father.name}\n            sex={father.sex}\n          />\n        ) : (\n          fatherName || '-'\n        )}\n    </td>\n  </tr>\n);\n","import { FC } from 'react';\nimport { Person } from '../../types';\nimport { PersonComponent } from '../PersonComponent/PersonComponent';\n\ntype Props = {\n  peopleData: Person[];\n  selectedPerson: string;\n};\n\nexport const PeopleTable: FC<Props> = ({\n  peopleData,\n  selectedPerson,\n}) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {peopleData.map((person) => {\n          const mother = peopleData\n            .find(pers => pers.name === person.motherName);\n          const father = peopleData\n            .find(pers => pers.name === person.fatherName);\n\n          return (\n            <PersonComponent\n              key={person.slug}\n              person={person}\n              isSelected={person.slug === selectedPerson}\n              mother={mother}\n              father={father}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../utils/api';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const People: FC = () => {\n  const [peopleData, setPeopleData] = useState([]);\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(response => {\n        setIsEmpty(!response.length);\n        setPeopleData(response);\n      })\n      .catch(() => setHasError(true));\n  }, []);\n\n  const { slug = '' } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      {peopleData.length\n        ? (\n          <PeopleTable\n            peopleData={peopleData}\n            selectedPerson={slug}\n          />\n        ) : (\n          <div className=\"block\">\n            <div className=\"box table-container\">\n              {(!hasError && !isEmpty) && (\n                <Loader />\n              )}\n\n              {hasError && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {isEmpty && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n            </div>\n          </div>\n        )}\n    </>\n  );\n};\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navigation } from './components/Navigation';\nimport { People } from './components/People';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <Navigation to=\"/\" title=\"Home\" />\n          <Navigation to=\"/people\" title=\"People\" />\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <h1 className=\"title\">Home Page</h1>\n            }\n          />\n\n          <Route\n            path=\"home\"\n            element={\n              <Navigate to=\"/\" replace />\n            }\n          />\n\n          <Route path=\"people\">\n            <Route\n              index\n              element={\n                <People />\n              }\n            />\n\n            <Route\n              path=\":slug\"\n              element={\n                <People />\n              }\n            />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={\n              <h1 className=\"title\">Page not found</h1>\n            }\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}